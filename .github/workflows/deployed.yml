name: Build

on:
  push:
    branches:
      - main


jobs:
  sonar:
    name: Checkout code and Sonar Scan
    runs-on: self-hosted
    steps:
      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # - name: SonarQube Scan
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
           pollingTimeoutSec: 600
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  compile:
    runs-on: self-hosted
    needs: sonar
    
    steps:
    - uses: actions/checkout@v4
    - name: Compile
      run: npm install

  trivy:
    runs-on: self-hosted
    needs: compile
    
    steps:
    - uses: actions/checkout@v4
    - name: Trivy file scan 
      run: trivy fs . > trivyfs.txt

  docker:
    runs-on: self-hosted
    needs: trivy
    steps:
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        tags: |
          duybo95/tic-tac-toe-github-action:latest
          duybo95/tic-tac-toe-github-action:${{ github.run_number }}
        file: ./Dockerfile

  slack:
    runs-on: self-hosted
    needs: docker
    
    steps:
    - uses: actions/checkout@v4
    - name: Send a Slack Notification
      if: always()
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#all-devops'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
