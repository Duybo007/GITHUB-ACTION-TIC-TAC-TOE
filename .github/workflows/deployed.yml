name: Build

on:
  push:
    branches:
      - main


jobs:
  sonar:
    name: Checkout code and Sonar Scan
    runs-on: self-hosted
    steps:
      # - uses: actions/checkout@v2
      #   with:
      #     fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      # - name: SonarQube Scan
      # - uses: sonarsource/sonarqube-scan-action@master
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #     SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      - uses: actions/checkout@v4
        with:
          # Disabling shallow clones is recommended for improving the relevancy of reporting
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.2.0 # Ex: v4.1.0, See the latest version at https://github.com/marketplace/actions/official-sonarqube-scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
      - name: SonarQube Quality Gate check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@master
        with:
           pollingTimeoutSec: 600
        env:
           SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
           SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  
  compile:
    runs-on: self-hosted
    needs: sonar
    
    steps:
    - uses: actions/checkout@v4
    - name: Compile
      run: npm install

  trivy:
    runs-on: self-hosted
    needs: compile
    
    steps:
    - uses: actions/checkout@v4
    - name: Trivy file scan 
      run: trivy fs . > trivyfs.txt

  docker:
    runs-on: self-hosted
    needs: trivy

    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    
    steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ vars.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and export to Docker
      uses: docker/build-push-action@v6
      with:
        push: false
        load: true # Export to Docker Engine rather than pushing to a registry
        tags: ${{ github.run_id }}
        target: test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64

    - name: Run Trivy for all CVEs (non-blocking)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.run_id }}
        exit-code: 0
        format: table

    - name: Run Trivy for HIGH,CRITICAL CVEs and report (blocking)
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ github.run_id }}
        exit-code: 1
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'HIGH,CRITICAL'
        format: 'sarif'
        output: 'trivy-results.sarif'
      
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
        
    - name: Docker meta
      id: docker_meta
      uses: docker/metadata-action@v5
      with:
        images: duybo95/tic-tac-toe-github-action
        flavor: |
          latest=false
        tags: |
          type=raw,value=04
          type=raw,value=latest,enable=${{ endsWith(github.ref, github.event.repository.default_branch) }}
          type=ref,event=pr
          type=ref,event=branch
          type=semver,pattern={{version}}
            
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        driver: docker-container
      
    - name: Build and Push Docker image
      uses: docker/build-push-action@v6
      with:
        context: .
        push: true
        # tags: |
        #   duybo95/tic-tac-toe-github-action:latest
        #   duybo95/tic-tac-toe-github-action:${{ github.run_number }}
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        file: ./Dockerfile
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64,linux/arm/v7

  slack:
    runs-on: self-hosted
    needs: docker
    
    steps:
    - uses: actions/checkout@v4
    - name: Send a Slack Notification
      if: always()
      uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#all-devops'
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
